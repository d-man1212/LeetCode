Done using C++, Python

class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        unordered_map<string, vector<string>> mp;
        
        for(auto x: strs){
            string word = x;
            sort(word.begin(), word.end());
            mp[word].push_back(x);
        }
        
        vector<vector<string>> ans;
        for(auto x: mp){
            ans.push_back(x.second);
        }
        return ans;
    }
};

class Solution(object):
    def groupAnagrams(self, strs):
        D=dict()
        for values in strs:
            temp=tuple(sorted(values))
            if temp not in D:
                D[temp]=[values]
            else:
                D[temp].append(values)
        return D.values()
        
